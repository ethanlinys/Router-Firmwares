name: rt-n56u-k2

on:
  workflow_dispatch:

env:
  DEVICE: PSG1218
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Build system setup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt update
          sudo apt install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd \
          	fakeroot kmod cpio git python3-docutils gettext automake autopoint \
          	texinfo build-essential help2man pkg-config zlib1g-dev libgmp3-dev \
          	libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget libc-dev-bin

      - name: Clone source code
        run: |
          git clone --depth=1 https://e.coding.net/hanwckf/rt-n56u/padavan.git /opt/rt-n56u
          
      - name: Prepare toolchain
        working-directory: /opt/rt-n56u/toolchain-mipsel
        run: |
          sh dl_toolchain.sh

      - name: Compile the firmware
        working-directory: /opt/rt-n56u/trunk
        id: compile
        run: |
          fakeroot ./build_firmware_modify ${{ env.DEVICE }}
          echo "::set-output name=status::success"
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

      - name: Organize files
        id: organize
        if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        run: |
          cd /opt/rt-n56u/trunk/images
          rm -rf `ls | grep -v ${{ env.DEVICE }}`
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "::set-output name=status::success"

      - name: Upload firmware directory
        uses: actions/upload-artifact@main
        if: steps.organize.outputs.status == 'success' && !cancelled()
        with:
          name: rt-n56u-${{ env.DEVICE }}${{ env.FILE_DATE }}
          path: ${{ env.FIRMWARE }}

      - name: Generate release tag
        id: tag
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        run: |
          echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
          touch release.txt
          echo "::set-output name=status::success"

      - name: Upload firmware to release
        uses: softprops/action-gh-release@v1
        if: steps.tag.outputs.status == 'success' && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: ${{ env.FIRMWARE }}/*

      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 30
          keep_minimum_runs: 30

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.1.0
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          keep_latest: 30
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
